version: 2
jobs:
  dbc_validation:
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - run:
          name: Set Up Container
          command: |
            pip install --user cantools
            export PATH=$PATH:/home/circleci/.local/bin
      - run:
          name: Validate DBC
          command: |
            cantools dump dbc/as_pacmod_*.dbc

  indigo:
    docker:
      - image: ros:indigo-ros-core
    steps:
      - checkout
      - run:
          name: Set Up Container
          command: |
            apt-get update && apt-get install openssh-client python-catkin-tools build-essential -y
            source `find /opt/ros -name setup.bash | sort | head -1`
            mkdir $CIRCLE_PROJECT_REPONAME && mv `find -maxdepth 1 -not -name . -not -name $CIRCLE_PROJECT_REPONAME` $CIRCLE_PROJECT_REPONAME/
            git init astuff_sensor_msgs && cd astuff_sensor_msgs
            git remote add origin https://github.com/astuff/astuff_sensor_msgs && git config core.sparsecheckout true && echo "pacmod_msgs/*" >> .git/info/sparse-checkout && git pull --depth=1 origin master
            cd ..
            rosdep install --from-paths . --ignore-src -y
            cd ..
            catkin init
            catkin config --extend /opt/ros/$ROS_DISTRO
      - run:
          name: Build
          command: |
            cd ..
            catkin build
      - run:
          name: Run Tests
          command: |
            cd ..
            catkin run_tests
    working_directory: ~/src

  kinetic:
    docker:
      - image: ros:kinetic-ros-core
    steps:
      - checkout
      - run:
          name: Set Up Container
          command: |
            apt-get update && apt-get install openssh-client python-catkin-tools build-essential -y
            source `find /opt/ros -name setup.bash | sort | head -1`
            mkdir $CIRCLE_PROJECT_REPONAME && mv `find -maxdepth 1 -not -name . -not -name $CIRCLE_PROJECT_REPONAME` $CIRCLE_PROJECT_REPONAME/
            git init astuff_sensor_msgs && cd astuff_sensor_msgs
            git remote add origin https://github.com/astuff/astuff_sensor_msgs && git config core.sparsecheckout true && echo "pacmod_msgs/*" >> .git/info/sparse-checkout && git pull --depth=1 origin master
            cd ..
            rosdep install --from-paths . --ignore-src -y
            cd ..
            catkin init
            catkin config --extend /opt/ros/$ROS_DISTRO
      - run:
          name: Build
          command: |
            cd ..
            catkin build
      - run:
          name: Run Tests
          command: |
            cd ..
            catkin run_tests
    working_directory: ~/src

  lunar:
    docker:
      - image: ros:lunar-ros-core
    steps:
      - checkout
      - run:
          name: Set Up Container
          command: |
            apt-get update && apt-get install openssh-client python-catkin-tools build-essential -y
            source `find /opt/ros -name setup.bash | sort | head -1`
            mkdir $CIRCLE_PROJECT_REPONAME && mv `find -maxdepth 1 -not -name . -not -name $CIRCLE_PROJECT_REPONAME` $CIRCLE_PROJECT_REPONAME/
            git init astuff_sensor_msgs && cd astuff_sensor_msgs
            git remote add origin https://github.com/astuff/astuff_sensor_msgs && git config core.sparsecheckout true && echo "pacmod_msgs/*" >> .git/info/sparse-checkout && git pull --depth=1 origin master
            cd ..
            rosdep install --from-paths . --ignore-src -y
            cd ..
            catkin init
            catkin config --extend /opt/ros/$ROS_DISTRO
      - run:
          name: Build
          command: |
            cd ..
            catkin build
      - run:
          name: Run Tests
          command: |
            cd ..
            catkin run_tests
    working_directory: ~/src

  melodic:
    docker:
      - image: ros:melodic-ros-core
    steps:
      - checkout
      - run:
          name: Set Up Container
          command: |
            apt-get update && apt-get install openssh-client python-catkin-tools build-essential -y
            source `find /opt/ros -name setup.bash | sort | head -1`
            mkdir $CIRCLE_PROJECT_REPONAME && mv `find -maxdepth 1 -not -name . -not -name $CIRCLE_PROJECT_REPONAME` $CIRCLE_PROJECT_REPONAME/
            git init astuff_sensor_msgs && cd astuff_sensor_msgs
            git remote add origin https://github.com/astuff/astuff_sensor_msgs && git config core.sparsecheckout true && echo "pacmod_msgs/*" >> .git/info/sparse-checkout && git pull --depth=1 origin master
            cd ..
            rosdep install --from-paths . --ignore-src -y
            cd ..
            catkin init
            catkin config --extend /opt/ros/$ROS_DISTRO
      - run:
          name: Build
          command: |
            cd ..
            catkin build
      - run:
          name: Run Tests
          command: |
            cd ..
            catkin run_tests
    working_directory: ~/src

workflows:
  version: 2
  ros_build:
    jobs:
      - dbc_validation
      - indigo:
          requires:
            - dbc_validation
      - kinetic:
          requires:
            - dbc_validation
      - lunar:
          requires:
            - dbc_validation
      - melodic:
          requires:
            - dbc_validation
